<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zuolinlin.github.io/zuo.github.io/</id>
    <title>zuolinlin</title>
    <updated>2022-04-07T13:39:14.491Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zuolinlin.github.io/zuo.github.io/"/>
    <link rel="self" href="https://zuolinlin.github.io/zuo.github.io/atom.xml"/>
    <subtitle>你要问我如何去二仙桥，我会告诉你走成华大道，可你要问人生，我也说不清。</subtitle>
    <logo>https://zuolinlin.github.io/zuo.github.io/images/avatar.png</logo>
    <icon>https://zuolinlin.github.io/zuo.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, zuolinlin</rights>
    <entry>
        <title type="html"><![CDATA[idea 找不到符号]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/idea-zhao-bu-dao-fu-hao/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/idea-zhao-bu-dao-fu-hao/">
        </link>
        <updated>2022-04-07T13:12:32.000Z</updated>
        <content type="html"><![CDATA[<p>在使用IDEA的时候，经常出现过找不到包或者找不到符号的情况，可以尝试以下几种方式来解决</p>
<p>1.如果项目使用的是Maven可以使用Maven-Reimport<br>
<img src="https://zuolinlin.github.io/zuo.github.io//post-images/1649337559961.png" alt="" loading="lazy"><br>
2.还可以 Invalidate and Restart （无效并重新启动）<br>
<img src="https://zuolinlin.github.io/zuo.github.io//post-images/1649337602794.png" alt="" loading="lazy"><br>
3.重新编译<br>
1.打开Project Structure --&gt;Modules 找到项目编译输出目录<br>
<img src="https://zuolinlin.github.io/zuo.github.io//post-images/1649337677309.png" alt="" loading="lazy"><br>
2.将target目录下文件清空<br>
<img src="https://zuolinlin.github.io/zuo.github.io//post-images/1649337720835.png" alt="" loading="lazy"><br>
3.右键项目重新build<br>
<img src="https://zuolinlin.github.io/zuo.github.io//post-images/1649337751258.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[函数式编程]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/han-shu-shi-bian-cheng/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/han-shu-shi-bian-cheng/">
        </link>
        <updated>2022-04-05T13:58:04.000Z</updated>
        <content type="html"><![CDATA[<pre><code>行为参数化就是让一个方法接受多种不同的行为作为参数，并且在内部使用他们，完成不同行为的能力。
行为参数化可以让代码更好的适应不断变化的要求，减轻未来的工作量。
</code></pre>
<pre><code class="language-java">

</code></pre>
<p>-传递代码就是将新行为作为参数传递给方法。<br>
但是在Java8之前实现起来很啰嗦，在java8之前可以适应匿名内部类来减少，1.8可以使用lambda表达式来</p>
<p>关于stream的使用</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[随笔]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/sui-bi/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/sui-bi/">
        </link>
        <updated>2022-04-05T07:58:50.000Z</updated>
        <content type="html"><![CDATA[<p>有些人并不是你的花 ，你只是途径了它的绽放。<br>
2022.04.04</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spring Cloud Alibaba底层原理]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/spring-cloud-alibaba-di-ceng-yuan-li/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/spring-cloud-alibaba-di-ceng-yuan-li/">
        </link>
        <updated>2022-03-27T12:30:32.000Z</updated>
        <content type="html"><![CDATA[<p>Spring Cloud Alibaba底层原理</p>
<p>组件</p>
<p>nacos：服务注册中心 配置中心</p>
<p>dubbo：RPC调用框架  负载均衡  远程调用</p>
<p>sentinel:限流</p>
<p>seata：分布式事务管理</p>
<figure data-type="image" tabindex="1"><img src="/Users/develop/code/java-stack/docs/framework/images/springcloudAlibaba.png" alt="img_1.png" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[UML]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/uml/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/uml/">
        </link>
        <updated>2022-03-27T11:32:04.000Z</updated>
        <content type="html"><![CDATA[<p>统一建模语言(Unified Modeling Language，UML)是一种为面向对象系统的产品进行说明、可视化和编制文档的一种标准语言，是非专利的第三代建模和规约语言。UML是面向对象设计的建模工具，独立于任何具体程序设计语言。</p>
<p>UML系统开发中有三个主要的模型： [3]<br>
功能模型：从用户的角度展示系统的功能，包括用例图。 [3]<br>
对象模型：采用对象，属性，操作，关联等概念展示系统的结构和基础，包括类别图、对象图。 [3]<br>
动态模型：展现系统的内部行为。包括序列图，活动图，状态图。 [3]</p>
<p>序列图（也叫左时序图，顺序图）</p>
<p>为什么要绘制时序图？<br>
我们编码的时候，知道有的用例的业务逻辑按照比较确定的时间先后顺序进行展开。这时候，我们就需要知道我们设计的系统中的不同类之间传递消息（可以认为是不同对象函数间的调用）要按照怎么样的顺序、传递什么消息、返回什么消息。这时候用时序图是最好不过的了</p>
<p>时序图的定义：</p>
<p>时序图是描述消息时间顺序的交互图。在图形上，时序图是一张表，其中显示的对象沿横轴排列，从左到右分布在图的顶部；而消息则沿纵轴按时间顺序排序。创建时序图时，以能够使图尽量简洁为依据布局。</p>
<p>时序图创建步骤</p>
<p>1、确定交互过程的上下文；</p>
<p>2、识别参与过程的交互对象；</p>
<p>3、为每个对象设置生命线；</p>
<p>4、从初始消息开始，依次画出随后消息；</p>
<p>5、考虑消息的嵌套，标示消息发生时的时间点，则采用FOC（focus of control）；</p>
<p>6、说明时间约束的地点。</p>
<p>时序图的元素<br>
我们在画时序图时会涉及7种元素：角色(Actor)、对象(Object)、生命线(LifeLine)、控制焦点(Activation)、消息(Message)、自关联消息、组合片段。其中前6种是比较常用和重要的元素，剩余的一种组合片段元素不是很常用，但是比较复杂。我们先介绍前6种元素，在单独介绍组合片段元素。</p>
<p>角色(Actor)<br>
系统角色，可以是人或者其他系统，子系统。以一个小人图标表示。<br>
对象(Object)<br>
对象位于时序图的顶部,以一个矩形表示。对象的命名方式一般有三种：<br>
1 对象名和类名。例如：华为手机:手机、loginServiceObject:LoginService。<br>
2 只显示类名，不显示对象，即为一个匿名类。例如：:手机、:LoginSservice。<br>
3 只显示对象名，不显示类名。例如：华为手机:、loginServiceObject:。<br>
生命线(LifeLine)<br>
时序图中每个对象和底部中心都有一条垂直的虚线，这就是对象的生命线(对象的时间线)。以一条垂直的虚线表。<br>
控制焦点(Activation)<br>
控制焦点代表时序图中在对象时间线上某段时期执行的操作。以一个很窄的矩形表示。<br>
消息(Message)<br>
表现代表对象之间发送的信息。消息分为三种类型。<br>
同步消息(Synchronous Message)<br>
消息的发送者把控制传递给消息的接收者，然后停止活动，等待消息的接收者放弃或者返回控制。用来表示同步的意义。以一条实线+实心箭头表示。<br>
异步消息(Asynchronous Message)<br>
消息发送者通过消息把信号传递给消息的接收者，然后继续自己的活动，不等待接受者返回消息或者控制。异步消息的接收者和发送者是并发工作的。以一条实线+大于号表示。<br>
返回消息(Return Message)<br>
返回消息表示从过程调用返回。以小于号+虚线表示。<br>
自关联消息<br>
表示方法的自身调用或者一个对象内的一个方法调用另外一个方法。以一个半闭合的长方形+下方实心剪头表示。</p>
<p>组合片段<br>
组合片段用来解决交互执行的条件和方式，它允许在序列图中直接表示逻辑组件，用于通过指定条件或子进程的应用区域，为任何生命线的任何部分定义特殊条件和子进程。组合片段共有13种，名称及含义如下：</p>
<p><img src="https://zuolinlin.github.io/zuo.github.io//post-images/1648381778972.png" alt="" loading="lazy"><br>
<img src="https://zuolinlin.github.io/zuo.github.io//post-images/1648381787741.png" alt="" loading="lazy"></p>
<p>常用组合片段举例</p>
<p>抉择（Alt）<br>
抉择在任何场合下只发生一个序列。 可以在每个片段中设置一个临界来指示该片段可以运行的条件。else 的临界指示其他任何临界都不为 True 时应运行的片段。如果所有临界都为 False 并且没有 else，则不执行任何片段。Alt片段组合可以理解为if..else if...else条件语句</p>
<p>选项（Opt）<br>
包含一个可能发生或不发生的序列。Opt相当于if..语句。</p>
<p>循环（Loop）<br>
片段重复一定次数，可以在临界中指示片段重复的条件。Loop相当于for语句。</p>
<p>并行（Par）<br>
并行处理，片段中的事件可以并行交错。Par相当于多线程。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[navicat]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/navicat/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/navicat/">
        </link>
        <updated>2022-03-23T14:23:02.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>使用navicat生成逆向模型</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[git]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/git/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/git/">
        </link>
        <updated>2022-03-23T14:22:17.000Z</updated>
        <content type="html"><![CDATA[<p>基本</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[idea]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/wo-er-ti-yu/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/wo-er-ti-yu/">
        </link>
        <updated>2022-03-22T15:14:10.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>snoarline</li>
<li>lombok</li>
<li>restfultool</li>
<li>translation</li>
<li>codata</li>
<li>FindBugs</li>
<li>Alibaba Java Coding Guidelines</li>
<li>CodeGlance</li>
<li>MyBatisCodeHelperPro</li>
<li>Free-idea-mybatis</li>
<li>github copilot</li>
</ul>
<p>JetBrains</p>
<pre><code>账号: linlinzuo    Kupcu4-davqiq-hosdaf  邮箱：zuoxiyue@outlook.com
账号：qiaosiye     xiyuezuo1993@         邮箱：878522146@qq.com
账号：yuezuo     Kupcu4-davqiq-hosdaf         邮箱：zuoxiyue2022@163.com
账号：xizuo      Kupcu4-davqiq-hosdaf   邮箱：zuoxiyue202204@163.com Ymqctx2022
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[maven]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/re-wu-ta-ren/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/re-wu-ta-ren/">
        </link>
        <updated>2022-03-22T12:46:20.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于]]></title>
        <id>https://zuolinlin.github.io/zuo.github.io/post/about/</id>
        <link href="https://zuolinlin.github.io/zuo.github.io/post/about/">
        </link>
        <updated>2019-01-25T11:09:48.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>欢迎来到我的小站呀，很高兴遇见你！🤝</p>
</blockquote>
<h2 id="关于本站">🏠 关于本站</h2>
<h2 id="博主是谁">👨‍💻 博主是谁</h2>
<h2 id="兴趣爱好">⛹ 兴趣爱好</h2>
<h2 id="联系我呀">📬 联系我呀</h2>
]]></content>
    </entry>
</feed>